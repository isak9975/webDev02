[1] 변수 :
    1. 변수 : 하나의 데이터를 저장할수 있는 메모리 공간( 논리적 공간 )
    2. 변수명 : 메모리 공간의 상징적인 이름
    3. 변수종류
        지역변수 : 특정한 {} 안에서 선언된 변수, 함수[], if[], for[]
                ->  선언된 {} 밖으로 호출이 불가능.
        전역변수 : 선언될때 static 키워드가 붙은 변수
                -> 프로젝트내 모든 클래스에서 호출이 가능
        매개변수 : 함수 호출시 인자값을 함수에 대입하는 변수
                -> 중매(매) : 매개변수, 인수값 <---> 변수(매개변수)
                -> 함수내에거만 존재하고 함수밖에 존재하지 않는 변수
        맴버변수 : 클래스안에 존재하고 함수밖에 존재하는 변수
                -> 멤버 (객체의맴버)
                -> 객체가 생성될 때 같이 생성되는 변수, 객체를 통해 접근가능한 변수
                -> 2가지:
                    1. 다른클래스 사용시에서 지정한 맴버변수를 호출시
                        클래스 변수 = new 클래스()
                        변수.맴버변수;
                    2. 같은클래스내 맴버변수 호출시
                        this.맴버변수;
                        this <----> super

        *주의할점 : 변수는 참조라는걸 이용해서 하나의 값을 기차처럼 변경/참조 하는 구조
                -> 메모리 효율성 극대화 하기
                Example1 변수 = new Example1();
                    1. 변수는 하나의 객체를 참조한다.
                    2. 객체는 각 맴버변수들을 참조한다
                    3. 각 맴버변수들은 각 값/객체 참조한다

                    변수------>Example1객체 ---->맴버변수1 ---->40
                                           ---->맴버변수2 ---->50
                                           ---->전역변수 ----->20

                    변수 ----> 배열 ----> [0]
                                    -----> [1]
                                      ------>[2]

       기본타입과 참조타입 구분하는 방법
        1. 기본타입 => 리터럴 저장하면, int, double, float, boolean ,char, byte, long, short
        2. 참조타입 => 주소 저장하면, 배열[], 클래스, 인터페이스,
            객체쓰는 이유 많음 - 기억하고 쓰는것이 아닌 느낌으로 써야함.
            기본타입을 만들어서 쓸수 없으니 참조타입으로 만들어서 쓰는것.

[2]배열 :
    - 배열 : 순서대로 번호가 붙인 원소 들이 연속적인 형태로 구성한 데이터 타입
    - 인덱스 : 순서대로 붙인 번호, 0부터 시작
    * 자바의 배열은 *하나의 타입* 의 자료 여러개 저장.
    * 고정길이( 동적할당 못한다. 크기(길이) 가 작았따 커졌다 못한다)
        -> 서로 다른 타입의 자료 여러개 저장 / 순서대로 여러개 저장하려고 씀.
        -> 방법 : 클래스안에 서로 라든 타입의 자료 저장하여 객체로 사용.

[3]컬렉션 프레임워크 : 객체기반의 여러 자료들을 저장하는 방법/함수 지원
    - LIST
        Arraylist(클래스)
        *가변길이( 동적 할당 가능, 크기(길이) 가 작았다 커졌다 가능)

    - SET
    - MAP

=======================================================================================

메소드(객체안에 있는 멤버함수) / 함수
1. 함수(Function)란?
    - 함( 상자 함 ), 수( 셈 수 ) : 수가 들어 잇는 상자
    - 공식 -> 장점 : 계산이 빠르고 재사용이 좋다.
    - 컴퓨터 함수 : 누군가가 미리 상자에 코드를 넣었다.
    * 함수란 : 미리 작성된 명령어(코드) 를 호출함으로써 재사용 가능한 코드 공간
        vs 변수란 : 미리 하나의 값을 저장 할 수 있는 공간

2. 사용목적 : 1.재활용 / 재사용 2. 2번 이상 반복되는 코드를 하나로 할수있다.
    * 메모리 효율성이 좋다 ( 지역변수 ? {} 안에서 선언된 변수는 {} 끝까지 초기화/사라짐)
        +함수가 실행되는 도중에만 변수를 사용하므로
    * 결과 / 반환 / 리턴 는 무조건 1개를 가질 수 있다. JAVA 는 void(없다) 도 있다.
    * 매개변수의 값에 따라 서로 다른결과를 만들어낼 수 있다.

    ---->
3. 중요한 용어
    1. 인수 : 함수 안으로 들어가는 수 (값)
        - 함수 호출 방법 : 함수명(인수1, 인수2);

    2. 매개변수 : 함수 호출시 인수 값을 각 변수들에 대입받는 변수( 인수<---중매--->변수)
        - 인수값의 타입과 매개변수의 타입이 일치해야한다. *(일치하지 않는 경우 : 타입변환[다형성])
        * 다형성 - 부모 -> 자식 x / 자식 -> 부모 O

    3. 반환타입 : 함수가 종료되ㅅ면서 함수를 호출했던 곳으로 반환할 값의 타입
        -반환값이 없을때는 void 로 작성한다

    4. 반환값 : 함수가 종료되면서 함수를 호출했던 곳으로 반환할 값

4. 기본 함수 형태
ex]
    빈환타입 함수명 ( 타입 매개변수1, 타입 매개변수2){
    실행문(코드);
    return 반환값(반환타입과 일치한 값);
 }

 변수 : 소문자 시작
 클래스 : 대문자 시작
 함수 : ()

5. 함수의 실행순서
    BoardView.getInstance().mainPage();
        -BoardView.getInstance()
            -[반환값] boardView.mainPage()
                -[최종반환값] void(없음)

    유재석.공부하기().밥먹기()
        - 유재석.공부하기() --> 공부한유재석
            -[반환값] 공부한유재석.밥먹기()
                -[최종반환값] 공부하고밥먹은유재석

---------------------------------------------------------------

    ps.setInt(2,updateDto.getNum());
        -getNum()한 결과를 setInt() 매개변수에 인수로 전달

    유재석.밥먹기(공부하기())
        -공부하기() ==> 공부한 결과를 밥먹기() 매개변수에 전달
            -->[반환값]공부결과반환
                ->유재석.밥먹기(공부결과반환)





















