- 한명이 git 관리(1명) 선정
- 한명은 지금 따라하면서 이번 미니프로젝트 진행

[1] JAVA 프로젝트 생성
	1. NEW PROJECT
	2. NAME : [프로젝트명]
	   -주로 웹사이트명으로 프로젝트명 사용.
	   *create git repository 체크 안함
	3. build system : intellij
	4. jdk : 17
	   *add sample code 체크 안함
	    [create]
[2] 간단한 프로젝트에 필요한 라이브러리 와 패키지 구성 
	1. 라이브러리 : JDBC 라이브러리

	2. MVC 패턴에 따른 패키지(폴더) 구성
	  etc패키지 : 코드와 자료들, 메모장, 규칙, 라이브러리
		-SQL파일
		-JDBC라이브러리
		-협업에 필요한 공지사항 메모
	  controller 패키지
	  model 패키지
		-dao 패키지 
		-dto 패키지
	  view 패키지
	  AppStart.class
[3] GIT 리포지토리에 프로젝트를 등록, 주의할점 : 빈 패키지는 푸시 불가능 클래스/파일 1개 이상 미리 생성하기

	1. 팀원중에 한사람이 대표로 프로젝트를 본인 git 리포지토리에 공유
		[VCS] -> [share project git] -> public
	2. repository name : 프로젝트명 	.private 체크 안함(public)
	   remote : origin
	   discription : 프로젝트의 간단한 설명 
	   [share]
	3. 최초 업로드 (모든 파일 체크해서)


	[초대받은사람입장]
	1.초대를 보내왔는지 확인
		1.git과 연동된 이메일 확인
		2.git 로고 왼쪽의 아이콘 클릭하면(파란색 표시)
[5]브랜치
	-git hub에는 브랜치 라는 기능이 포함
		목적 : 
			1. 협업시 각 브랜치는 각 사람들의 코드 구분
			2. 버전 관리, 테스트용코드 vs 배포용코드 vs 임시코드
	정의 : 코드를 저장하는 저장소를 각 브랜치마다 서로 달느 저장 상태 관리할수 있도록 지원하는 긴으
		-기본값 mastser
		-matser 브랜치를 이용한 여러사람이 동일한 저장소를 사용하면 버전관리 힘들다(충돌)

	협업에서 브랜치 활용
		1. master 브랜치는 취합(여러사람의 코드를 합친 결과 - 최신코드) 코드
		2. 각 팀원들 마다 각 브랜치를 만들어서 작업 하기
		3. 각 팀원들은 브랜치 만들기
			1.주인장 : 프로젝트 내 상단 [master] 클릭 -> new branch -> 브랜치명 : 본인 한글이름 나중에 영어

		
		2. 초대 받은 사람:
			1.인텔리제이 최소 화면에서 ㅔget from VCS]
			2. 왼쪽 메뉴 github -> 리포지토리 명 검색 후 원하는 리포지토리 선택 -> clone
			3. 프로젝트 내 상단 [master//main] 클릭




- 협업간의 브랜치 운영 / 취합하는 방법
       *. master 확인 중요
       * 한사람을 정해서 관리하는게 좋음.
        1. 프로젝트에서 코드 작성시 본인 브랜치에서만 코드 작성한다.
        2. push(업데이트)를 한 순서대로 pull(다운로드)을 해야한다.(시간,순서 중요)
        3. 겹치는 코드가 있을시 merge
        4. git branch -> remote -> check out -> master
        5. git branch -> remote -> pull into master using Merge
        6. 한사람씩 pull -> push 해주는게 좋음



        git remote -v
        git remote move